[{"C:\\Users\\theis\\Documents\\GitHub\\ReactPokemonApiGame\\src\\index.js":"1","C:\\Users\\theis\\Documents\\GitHub\\ReactPokemonApiGame\\src\\App.js":"2","C:\\Users\\theis\\Documents\\GitHub\\ReactPokemonApiGame\\src\\reportWebVitals.js":"3","C:\\Users\\theis\\Documents\\GitHub\\ReactPokemonApiGame\\src\\components\\Welcome.js":"4","C:\\Users\\theis\\Documents\\GitHub\\ReactPokemonApiGame\\src\\components\\Fight.js":"5","C:\\Users\\theis\\Documents\\GitHub\\ReactPokemonApiGame\\src\\components\\Pick.js":"6","C:\\Users\\theis\\Documents\\GitHub\\ReactPokemonApiGame\\src\\components\\ResultPage.js":"7","C:\\Users\\theis\\Documents\\GitHub\\ReactPokemonApiGame\\src\\components\\Moves.js":"8","C:\\Users\\theis\\Documents\\GitHub\\ReactPokemonApiGame\\src\\components\\Mewtwo.js":"9","C:\\Users\\theis\\Documents\\GitHub\\ReactPokemonApiGame\\src\\components\\PokemonCard.js":"10","C:\\Users\\theis\\Documents\\GitHub\\ReactPokemonApiGame\\src\\components\\FetchMewtwo.js":"11"},{"size":502,"mtime":1629443746355,"results":"12","hashOfConfig":"13"},{"size":616,"mtime":1629445067568,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":1457,"mtime":1630046815587,"results":"16","hashOfConfig":"13"},{"size":2780,"mtime":1630046606588,"results":"17","hashOfConfig":"13"},{"size":5285,"mtime":1630046894176,"results":"18","hashOfConfig":"13"},{"size":580,"mtime":1630045251724,"results":"19","hashOfConfig":"13"},{"size":7642,"mtime":1630056488139,"results":"20","hashOfConfig":"13"},{"size":1001,"mtime":1630045251721,"results":"21","hashOfConfig":"13"},{"size":3853,"mtime":1630045251724,"results":"22","hashOfConfig":"13"},{"size":2257,"mtime":1630045251720,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"8vji1l",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\theis\\Documents\\GitHub\\ReactPokemonApiGame\\src\\index.js",[],["50","51"],"C:\\Users\\theis\\Documents\\GitHub\\ReactPokemonApiGame\\src\\App.js",[],"C:\\Users\\theis\\Documents\\GitHub\\ReactPokemonApiGame\\src\\reportWebVitals.js",[],"C:\\Users\\theis\\Documents\\GitHub\\ReactPokemonApiGame\\src\\components\\Welcome.js",["52"],"import { useHistory } from 'react-router-dom';\r\nimport { useEffect, useState }  from 'react';\r\nimport './css/welcome.css';\r\n\r\nconst Welcome = () => {\r\n    const [trainerName, setTrainerName] = useState('');\r\n    const history = useHistory();\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        if(trainerName !== '') {\r\n            localStorage.setItem('trainerName', trainerName);\r\n            const handleHistory = () => {\r\n                history.push('/pick');\r\n            }\r\n            handleHistory();\r\n        }\r\n    }, [trainerName]);\r\n\r\n    return(\r\n        <section className='content'>\r\n            <article className='content-heading'>\r\n                <h1 className='heading'>Can You Beat The Legendary Pok√©mon?</h1>\r\n            </article>\r\n            <section>\r\n                <h2 className='info-heading'>Enter your trainer name</h2>\r\n                <article className='content-btn'>\r\n                    <input className=\"content-btn-input\" type=\"text\" placeholder=\"Name ...\" />\r\n                    <button className='content-btn-submit' onClick={(e) => {\r\n                        let inputField = document.querySelector('.content-btn-input');\r\n                        if(inputField.value !== '') {\r\n                            setTrainerName(inputField.value); \r\n                        } \r\n                    }}>Go to pick</button>\r\n                </article>\r\n            </section>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Welcome;","C:\\Users\\theis\\Documents\\GitHub\\ReactPokemonApiGame\\src\\components\\Fight.js",["53"],"import React from 'react';\r\n\r\n//Components import\r\nimport Moves from './Moves';\r\nimport ResultPage from './ResultPage';\r\nimport Mewtwo from './Mewtwo';\r\n\r\n// Images import\r\nimport grassImage from '../images/grass.png';\r\n\r\n// CSS import\r\nimport './css/fight.css';\r\n\r\nclass Fight extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mewtwo: JSON.parse(localStorage.getItem('mewtwo')),\r\n            pokemonList: JSON.parse(localStorage.getItem('trainer-pokemon-list')),\r\n            currentPokemon: JSON.parse(localStorage.getItem('trainer-pokemon-list'))[0]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <section className='fightcontent'>\r\n                \r\n                <div className=\"content-fight\">\r\n                    <Mewtwo mewtwo={this.state.mewtwo}  />\r\n                    <div className=\"content-fight-bottom\">\r\n                        <img src={grassImage} alt=\"Grass image\"/>\r\n                        <div className=\"content-fight-bottom-pokemon\">\r\n                            <img id='currentPokemonImg' src={this.state.currentPokemon.imgSpriteBack} alt=\"current pokemon\"/>\r\n                        </div>\r\n    \r\n                        <section>\r\n                            <div className=\"content-fight-bottom-info\">\r\n                                <div className=\"content-fight-bottom-info-namelvl\">\r\n                                    <p className=\"pokemon-name\">{this.state.currentPokemon.name}</p>\r\n                                    <p className=\"pokemon-lvl\">lvl. {this.state.currentPokemon.lvl}</p>\r\n                                </div>\r\n                                <div className=\"content-fight-bottom-info-hp\">\r\n                                    <p className=\"hp-text\">HP</p>\r\n                                    <div>\r\n                                        <p className=\"hp-value\">{this.state.currentPokemon.currentHP}</p>\r\n                                        <p className=\"hp-value\"> / </p>\r\n                                        <p className=\"hp-value current-starting-hp\">{this.state.currentPokemon.HP}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n                \r\n                <Moves currentpokemon={this.state.currentPokemon} setCurrentpokemon={value => this.setState({currentPokemon: value})} pokemonlist={this.state.pokemonList} setPokemonlist={value => this.setState({pokemonList: value})} mewtwo={this.state.mewtwo} setMewtwo={value => this.setState({mewtwo: value})} />\r\n                <ResultPage />\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Fight;","C:\\Users\\theis\\Documents\\GitHub\\ReactPokemonApiGame\\src\\components\\Pick.js",[],"C:\\Users\\theis\\Documents\\GitHub\\ReactPokemonApiGame\\src\\components\\ResultPage.js",[],"C:\\Users\\theis\\Documents\\GitHub\\ReactPokemonApiGame\\src\\components\\Moves.js",["54"],"import React from \"react\";\r\n\r\nclass Moves extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentPokemonName: this.props.currentpokemon.name,\r\n            currentPokemonMoveOne: {\r\n                moveName: this.props.currentpokemon.moves[0].moveName,\r\n                moveDamage: this.props.currentpokemon.moves[0].moveDamage\r\n            },\r\n            currentPokemonMoveTwo: {\r\n                moveName: this.props.currentpokemon.moves[1].moveName,\r\n                moveDamage: this.props.currentpokemon.moves[1].moveDamage\r\n            },\r\n            currentPokemonMoveThree: {\r\n                moveName: this.props.currentpokemon.moves[2].moveName,\r\n                moveDamage: this.props.currentpokemon.moves[2].moveDamage\r\n            },\r\n            currentPokemonMoveFour: {\r\n                moveName: this.props.currentpokemon.moves[3].moveName,\r\n                moveDamage: this.props.currentpokemon.moves[3].moveDamage\r\n            },\r\n            fightIsClicked: false,\r\n            pokemonlistIsClicked: false,\r\n            myTurn: true,\r\n            isCurrentPokemonDead: false,\r\n            pokemonList: this.props.pokemonlist,\r\n            currentPokemon: this.props.currentpokemon,\r\n            mewtwo: this.props.mewtwo\r\n        }\r\n    }\r\n\r\n    onFightClick = () => {\r\n        if(this.state.isCurrentPokemonDead === false) {\r\n            if(this.state.fightIsClicked) {\r\n                this.setState({ fightIsClicked: false });\r\n            } else {\r\n                this.setState({ fightIsClicked: true });\r\n            }\r\n        }\r\n    }\r\n\r\n    onPokeBagClick = () => {\r\n        if(this.state.pokemonlistIsClicked) {\r\n            this.setState({ pokemonlistIsClicked: false });\r\n        } else {\r\n            this.setState({ pokemonlistIsClicked: true });\r\n        }\r\n    }\r\n\r\n    onPokemonInBagClick = () => {\r\n        this.setState({isCurrentPokemonDead: false});\r\n    }\r\n\r\n    mewtwoMakesMove = () => {\r\n        if(this.state.myTurn === false) {\r\n            let mewtwoImg = document.querySelector('#mewtwoImg');\r\n            let currentPokeImg = document.querySelector('#currentPokemonImg');\r\n            let currentPokemonCopy = this.state.currentPokemon;\r\n            let pokemonListCopy = [...this.state.pokemonList];\r\n            let randomNumberGen = Math.floor(Math.random() * 4);\r\n            currentPokemonCopy.currentHP = currentPokemonCopy.currentHP - this.state.mewtwo.moves[randomNumberGen].moveDamage;\r\n            if(currentPokemonCopy.currentHP <= 0) {\r\n                currentPokemonCopy.currentHP = 0;\r\n                currentPokeImg.classList.add('pokemon-dead');\r\n                this.setState({isCurrentPokemonDead: true});\r\n            }\r\n\r\n            mewtwoImg.className = 'mewtwoAttack';\r\n            setTimeout(() => {\r\n                mewtwoImg.className = '';\r\n            }, 500);\r\n            this.setState({currentPokemon: currentPokemonCopy}, () => this.props.setCurrentpokemon(this.state.currentPokemon));\r\n            this.setState({myTurn: true});\r\n        }\r\n    }\r\n\r\n    makeMove = (damage) => {\r\n        if(this.state.myTurn) {\r\n            let currentPokeImg = document.querySelector('#currentPokemonImg');\r\n            let mewtwoCopy = this.state.mewtwo;\r\n            mewtwoCopy.HP = mewtwoCopy.HP - damage;\r\n            currentPokeImg.className = 'currentAttack';\r\n            setTimeout(() => {\r\n                currentPokeImg.className = '';\r\n            }, 500);\r\n            this.setState({fightIsClicked: false});\r\n            this.setState({mewtwo: mewtwoCopy}, () => this.props.setMewtwo(this.state.mewtwo));\r\n            this.setState({myTurn : false}, () => setTimeout(() => {this.mewtwoMakesMove()}, 1000));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n            <div className=\"content-bottom\">\r\n                <div className=\"content-bottom-left\">\r\n                    <div className={`content-bottom-left-overlay ${this.state.fightIsClicked ? 'hide-overlay' : 'show-overlay'}`}>\r\n                        <h1 className=\"content-bottom-left-overlay-heading\">What will {this.state.currentPokemonName} do?</h1>\r\n                    </div>\r\n                    <div className=\"content-bottom-left-moves\">\r\n                        <section className=\"moves-move-wrapper\" onClick={() => this.makeMove(this.state.currentPokemonMoveOne.moveDamage)}>\r\n                            <div>\r\n                                <p className=\"move\">{this.state.currentPokemonMoveOne.moveName}</p>\r\n                            </div>\r\n                        </section>\r\n                        <section className=\"moves-move-wrapper\" onClick={() => this.makeMove(this.state.currentPokemonMoveTwo.moveDamage)}>\r\n                            <div>\r\n                                <p className=\"move\">{this.state.currentPokemonMoveTwo.moveName}</p>\r\n                            </div>\r\n                        </section>\r\n                        <section className=\"moves-move-wrapper\" i onClick={() => this.makeMove(this.state.currentPokemonMoveThree.moveDamage)}>\r\n                            <div>\r\n                                <p className=\"move\">{this.state.currentPokemonMoveThree.moveName}</p>\r\n                            </div>\r\n                        </section>\r\n                        <section className=\"moves-move-wrapper\"  onClick={() => this.makeMove(this.state.currentPokemonMoveFour.moveDamage)}>\r\n                            <div>\r\n                                <p className=\"move\">{this.state.currentPokemonMoveFour.moveName}</p>\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n                <div className=\"content-bottom-right\">\r\n                    <div onClick={this.onFightClick}>\r\n                        <p className=\"content-bottom-right-fight\" >Fight</p>\r\n                    </div>\r\n                    <div onClick={this.onPokeBagClick}>\r\n                        <p className=\"content-bottom-right-pokemon\">Pok√©mon</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={`content-pokemon-list ${this.state.pokemonlistIsClicked ? 'show-poke-list' : 'hide-poke-list'}`}>\r\n                <p className=\"content-pokemon-list-back-btn\" onClick={this.onPokeBagClick}>Back</p>\r\n\r\n                {this.state.pokemonList.map(pokemon =>\r\n                    <div className=\"content-pokemon-list-item\" onClick={this.onPokemonInBagClick}>\r\n                        <img src={pokemon.imgSprite} alt=\"pokemon\"/>\r\n                        <div className=\"content-pokemon-list-item-info\">\r\n                            <div className=\"content-pokemon-list-item-info-namelvl\">\r\n                                <p className=\"pokemon-name\">{pokemon.name}</p>\r\n                                <p className=\"pokemon-lvl\">lvl. {pokemon.lvl}</p>\r\n                            </div>\r\n                            <div className=\"content-pokemon-list-item-info-hp\">\r\n                                <p className=\"hp-text\">HP:</p>\r\n                                <div>\r\n                                    <p className=\"hp-value\">{pokemon.currentHP}</p\r\n                                    ><p className=\"hp-value\"> / </p>\r\n                                    <p className=\"hp-value starting-hp\">{pokemon.HP}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Moves;","C:\\Users\\theis\\Documents\\GitHub\\ReactPokemonApiGame\\src\\components\\Mewtwo.js",[],"C:\\Users\\theis\\Documents\\GitHub\\ReactPokemonApiGame\\src\\components\\PokemonCard.js",[],"C:\\Users\\theis\\Documents\\GitHub\\ReactPokemonApiGame\\src\\components\\FetchMewtwo.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":19,"column":8,"nodeType":"61","endLine":19,"endColumn":21,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":31,"column":25,"nodeType":"65","endLine":31,"endColumn":66},{"ruleId":"66","severity":1,"message":"67","line":61,"column":17,"nodeType":"68","messageId":"69","endLine":61,"endColumn":32},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["72"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don‚Äôt need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'pokemonListCopy' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},"Update the dependencies array to be: [history, trainerName]",{"range":"75","text":"76"},[519,532],"[history, trainerName]"]